Users
		Privilege
			"objectName":{"description":"The privilege object name","readOnly":true,"type":"string"}
			"subOperation":{"description":"The highest privilege operation on its children operations","readOnly":true,"type":"string"}
			"operation":{"description":"The privilege operation","type":"string","example":"write"}
			"objectId":{"description":"The privilege object identifier","type":"string","example":"123"}
			"objectType":{"description":"The privilege object type. values can be [dashboard_group|dashboard|host_group|service_group|website_group|report_group|remoteSession|chat|setting|device_dashboard|help|logs|configNeedDeviceManagePermission|map|resourceMapTab|tracesManageTab]","type":"string","example":"dashboard group"}
Version
Websites
		Website
			"type":{"description":"pingcheck | webcheck\nThe type of the service","type":"string","example":"webcheck"}
			"rolePrivileges":{"description":"The role privilege operation(s) for this website that are granted to the user who made the API request","readOnly":true,"type":"array","items":{"type":"string"}}

		WebsiteGroup
			"testLocation":{"description":"An object that indicates the websites locations.\ne.g. {\u0027all\u0027: false, smgId:[1,2,3], collectorIds:[14,16]}","$ref":"#/definitions/WebsiteLocation"}
			"hasWebsitesDisabled":{"description":"Indicates if there are websites disabled in this group","readOnly":true,"type":"boolean"}
			"rolePrivileges":{"description":"The privilege operations of the user\u0027s role that made the API request.  The array can contain the values ack, sdt and/or threshold","readOnly":true,"type":"array","items":{"type":"string"}}
			"numOfDirectWebsites":{"format":"int32","description":"The number of direct websites in this group","readOnly":true,"type":"integer"}
			"numOfDirectSubGroups":{"format":"int32","description":"The number of direct website groups in this group (excluding those in subgroups)","readOnly":true,"type":"integer"}
			"numOfWebsites":{"format":"int32","description":"The number of websites in the service group, including the websites in sub groups","readOnly":true,"type":"integer"}
			"properties":{"description":"The website folder properties","type":"array","items":{"$ref":"#/definitions/NameAndValue"}}

		WebsiteCollectorInfo
			properties":{"hostname":{"description":"The hostname of the collector"
			"collectorGroupName":{"description":"The group name of the group the collector is present in"
			"collectorGroupId":{"format":"int32","description":"The group Id of the group the collector is present in"
			"description":{"description":"The description of the collector"
			"id":{"format":"int32","description":"The collector id"
			"status":{"description":"The status of the collector","readOnly":true,"type":"string"}}},

		WebsiteLocation
			"all":{"description":"This field only for the SiteMonitor Groups, does not include Internal Service Groups","type":"boolean","example":"true"}
			"collectorIds":{"description":"The Internal Service Groups Ids","type":"array","items":{"format":"int32","type":"integer"}}
			"collectors":{"description":"The collector info of the services","type":"array","items":{"$ref":"#/definitions/WebsiteCollectorInfo"}}
			"smgIds":{"description":"The SiteMonitor Groups Ids","type":"array","items":{"format":"int32","type":"integer"},"example":"[1, 2, 4, 3, 5, 6]"}

		WebsiteCheckpointRawData
			"values":{"description":"datapoint values 2-D list","readOnly":true,"type":"array","items":{"type":"array","items":{"type":"object"}}}
			"time":{"description":"timestamp list","readOnly":true,"type":"array","items":{"format":"int64","type":"integer"}}
			"nextPageParams":{"description":"the next page parameters","readOnly":true,"type":"string"}}},"

		WebCheckStep
			"schema":{"description":"HTTP schema","type":"string"}
			"respType":{"description":"Plain Text/String | Glob expression | JSON | XML | Multi line key value pair\nStep Response Type","type":"string"}
			"HTTPHeaders":{"description":"HTTP header","type":"string"}
			"auth":{"description":"Authorization Information","$ref":"#/definitions/Authentication"}
			"matchType":{"description":"Body match type","type":"string","example":"plain"}
			"description":{"description":"The description of the Step","type":"string"}
			"type":{"description":"script | config\nThe type of service step","readOnly":true,"type":"string","example":"config"}
			"timeout":{"format":"int32","description":"Request timeout measured in seconds","type":"integer"}
			"useDefaultRoot":{"description":"true | falseCheck if using the default root","type":"boolean","example":"true"}
			"path":{"description":"Path for JSON, XPATH","type":"string"}
			"HTTPMethod":{"description":"GET | HEAD | POST\nSpecifies the type of HTTP method","type":"string","example":"GET"}
			"enable":{"description":"true | false\nSpecifies whether to enable step or not","type":"boolean"}
			"HTTPVersion":{"description":"1.1 | 1\nSpecifies HTTP version","type":"string","example":"1.1"}
			"keyword":{"description":"Keyword that matches the body","type":"string"}
			"respScript":{"description":"The Step Response Script","type":"string"}
			"label":{"description":"The Label of the Step","type":"string"}
			"url":{"description":"The URL of service step","type":"string","example":"/"}
			"invertMatch":{"description":"true | false\nChecks if invert matches or not","type":"boolean","example":false}
			"reqScript":{"description":"The Request Script","type":"string"}
			"HTTPBody":{"description":"HTTP Body","type":"string"}
			"followRedirection":{"description":"true | false\nSpecifies whether to follow redirection or not","type":"boolean","example":"true"}
			"postDataEditType":{"description":"Raw | Formatted Data\nSpecifies POST data type","type":"string","example":"raw"}
			"name":{"description":"The name of the Step","type":"string"}
			"requireAuth":{"description":"true | false\nChecks if authorization required or not","type":"boolean","example":false}
			"reqType":{"description":"script | config\nStep Request Type","type":"string"}
			"fullpageLoad":{"description":"true | false\nChecks if full page should be loaded or not","type":"boolean","example":false}
			"statusCode":{"description":"The expected status code","type":"string"}
		WebsiteCheckPoint
			"geoInfo":{"description":"The geographical information (location) of the SiteMonitor Checkpoint","readOnly":true,"type":"string"}
			"id":{"format":"int32","description":"The Id of the SiteMonitor Checkpoint","readOnly":true,"type":"integer"}
			"smgId":{"format":"int32","description":"The sitemonitor group id","readOnly":true,"type":"integer"}
		SiteMonitorCheckpoint
			"geoInfo":{"description":"The geographical information (location) of the SiteMonitor Checkpoint","readOnly":true,"type":"string"}
			"displayPrio":{"format":"int32","description":"The display priority of the SiteMonitor Checkpoint in your LogicMonitor portal","type":"integer"}
			"name":{"description":"The SiteMonitor checkPoint name","readOnly":true,"type":"string"}
			"isEnabledInRoot":{"description":"Checks if sitemonitor enabled in root service group","readOnly":true,"type":"boolean"}
			"description":{"description":"Check point description","type":"string"}
			"id":{"format":"int32","description":"The Id of the SiteMonitor Checkpoint","readOnly":true,"type":"integer"}

		getSDTHistoryByWebsiteId
			change summary to "get SDT history for the website (Response may contain extra fields depending upon the type of SDT)"
		getAllSDTListByWebsiteGroupId
			change summary to "get a list of SDTs for a website group (Response may contain extra fields depending upon the type of SDT)"
		getImmediateWebsiteListByWebsiteGroupId
			change summary to "get a list of websites for a group (Response may contain extra fields depending upon the type of check { PingCheck | WebCheck} being added)"

Add "name": "IntegrationAuditLogs", "name": "PropertySources" to the tags of securityDefinitions